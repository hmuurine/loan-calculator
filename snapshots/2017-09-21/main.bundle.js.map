{"version":3,"sources":["C:/Users/hannes/ohjelmointi/git/loan-calculator/src/$_gendir lazy","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/app.component.css","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/app.component.html","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/app.component.ts","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/app.module.ts","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/common/generic-curve-component.ts","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/common/generic-curve.component.html","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/costs-curve-cumulative/costs-curve-cumulative.component.css","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/costs-curve-cumulative/costs-curve-cumulative.component.ts","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/costs-curve-monthly/costs-curve-monthly.component.css","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/costs-curve-monthly/costs-curve-monthly.component.ts","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/interest-curve/interest-curve.component.css","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/interest-curve/interest-curve.component.ts","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/loan-data-form/loan-data-form.component.css","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/loan-data-form/loan-data-form.component.html","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/loan-data-form/loan-data-form.component.ts","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/model/loan-data.ts","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/environments/environment.ts","C:/Users/hannes/ohjelmointi/git/loan-calculator/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fadein {\\r\\n    animation:fadein 1s;\\r\\n    -moz-animation:fadein 1s; /* Firefox */\\r\\n    -webkit-animation:fadein 1s; /* Safari and Chrome */\\r\\n    -o-animation:fadein 1s; /* Opera */\\r\\n}\\r\\n\\r\\n@keyframes fadein {\\r\\n    0% {opacity:0;}\\r\\n    100% {opacity:1;}\\r\\n }\\r\\n \\r\\n @-webkit-keyframes fadein { /* Safari and Chrome */\\r\\n    0% {opacity:0;}\\r\\n    100% {opacity:1;}\\r\\n }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <h2>Loan calculator</h2>\\r\\n  <app-loan-data-form\\r\\n    [initialValues]=\\\"model.getFormData()\\\"\\r\\n    (onSubmit)=\\\"initGraphs($event)\\\">\\r\\n  </app-loan-data-form>\\r\\n  <div *ngIf=\\\"model.graphsInitialized()\\\" class=\\\"fadein\\\">\\r\\n    <hr/>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-4 col-sm-12\\\">\\r\\n        <app-interest-curve\\r\\n          [initialInterestRates]=\\\"model.getYearlyInterestRates()\\\"\\r\\n          (valueChanged)=\\\"updateInterestRate($event)\\\">\\r\\n        </app-interest-curve>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 col-sm-12\\\">\\r\\n        <app-costs-curve-monthly\\r\\n          [initialMonthlyPayment]=\\\"model.getMonthlyPayment()\\\"\\r\\n          [initialMonthlyInterest]=\\\"model.getMonthlyInterest()\\\">\\r\\n        </app-costs-curve-monthly>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-4 col-sm-12\\\">\\r\\n        <app-costs-curve-cumulative\\r\\n          [initialCumulativeTotal]=\\\"model.getCumulativeTotal()\\\"\\r\\n          [initialCumulativeInterest]=\\\"model.getCumulativeInterest()\\\">\\r\\n        </app-costs-curve-cumulative>\\r\\n      </div>\\r\\n    </div>\\r\\n    <hr/>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 col-sm-12 form-group\\\">\\r\\n        <label for=\\\"totalCosts\\\">Cumulative costs (&euro;)</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"totalCosts\\\" [value]=\\\"model.getTotalCosts()\\\" disabled=\\\"disabled\\\">\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 col-sm-12 form-group\\\">\\r\\n        <label for=\\\"totalInterest\\\">Cumulative interest (&euro;)</label>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"totalInterest\\\" [value]=\\\"model.getTotalInterest()\\\" disabled=\\\"disabled\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, ViewChild } from \"@angular/core\";\r\nimport { LoanData } from \"./model/loan-data\";\r\nimport { LoanFormDataInterface } from \"./common/loan-form-data-interface\";\r\nimport { InterestValueInterface } from \"./common/interest-value-interface\";\r\nimport { InterestCurveComponent } from \"./interest-curve/interest-curve.component\";\r\nimport { CostsCurveMonthlyComponent } from \"./costs-curve-monthly/costs-curve-monthly.component\";\r\nimport { CostsCurveCumulativeComponent } from \"./costs-curve-cumulative/costs-curve-cumulative.component\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"]\r\n})\r\nexport class AppComponent {\r\n\r\n  private model = new LoanData();\r\n\r\n  @ViewChild(InterestCurveComponent) private interestCurve: InterestCurveComponent;\r\n  @ViewChild(CostsCurveMonthlyComponent) private costsCurveMonthly: CostsCurveMonthlyComponent;\r\n  @ViewChild(CostsCurveCumulativeComponent) private costsCurveCumulative: CostsCurveCumulativeComponent;\r\n\r\n  /**\r\n   * Initializes graphs after initial data submit.\r\n   * \r\n   * @param loanDataForm \r\n   */\r\n  private initGraphs(loanDataForm: LoanFormDataInterface) {\r\n    this.model.setFormData(loanDataForm);\r\n    this.updateCharts();\r\n  }\r\n\r\n  /**\r\n   * Function that's called when modifying a single yearly interest.\r\n   *\r\n   * @param rate \r\n   */\r\n  private updateInterestRate(rate: InterestValueInterface) {\r\n    this.model.setYearlyInterestRate(rate.idx, rate.value);\r\n    this.updateCharts();\r\n  }\r\n\r\n  /**\r\n   * Update data for all the charts.\r\n   */\r\n  private updateCharts() {\r\n    for (let chart of [this.interestCurve, this.costsCurveMonthly, this.costsCurveCumulative]) {\r\n      if (chart) {\r\n        chart.updateCharts(this.model);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/app.component.ts","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ChartModule } from \"angular2-highcharts\";\r\nimport { HighchartsStatic } from \"angular2-highcharts/dist/HighchartsService\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { InterestCurveComponent } from \"./interest-curve/interest-curve.component\";\r\nimport { LoanDataFormComponent } from \"./loan-data-form/loan-data-form.component\";\r\nimport { CostsCurveMonthlyComponent } from \"./costs-curve-monthly/costs-curve-monthly.component\";\r\nimport { CostsCurveCumulativeComponent } from \"./costs-curve-cumulative/costs-curve-cumulative.component\";\r\n\r\ndeclare var require: any;\r\n\r\nexport function highchartsFactory() {\r\n  const hc = require(\"highcharts\");\r\n  const hcdp = require(\"highcharts-draggable-points\");\r\n  hcdp(hc);\r\n\r\n  return hc;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    InterestCurveComponent,\r\n    LoanDataFormComponent,\r\n    CostsCurveMonthlyComponent,\r\n    CostsCurveCumulativeComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    NgbModule.forRoot(),\r\n    ChartModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HighchartsStatic,\r\n      useFactory: highchartsFactory\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/app.module.ts","import { SimpleChanges } from \"@angular/core\";\r\nimport { Chart, ChartObject, ChartOptions } from \"highcharts\";\r\nimport { LoanData } from \"../model/loan-data\";\r\n\r\n/**\r\n * Common parent class for all Highcharts components\r\n */\r\nexport abstract class GenericCurveComponent {\r\n\r\n    protected options: ChartOptions;\r\n    protected chart: ChartObject;\r\n\r\n    /**\r\n     * Method for saving Highcharts object for Angular use.\r\n     * \r\n     * @param ch \r\n     */\r\n    protected saveChartInstance(ch: ChartObject) {\r\n        this.chart = ch;\r\n    }\r\n\r\n    /**\r\n     * Generates base Highcharts graph option structure\r\n     */\r\n    protected generateGraphOptions(title: string, xTitle: string, yTitle: string, animation: boolean) {\r\n        return {\r\n            title : { text : title },\r\n            xAxis: {\r\n              title: {\r\n                text: xTitle\r\n              }\r\n            },\r\n            yAxis: {\r\n              title: {\r\n                text: yTitle\r\n              }\r\n            },\r\n            chart: {\r\n                animation: animation\r\n            },\r\n            tooltip: {\r\n              valueDecimals: 2,\r\n              headerFormat: \"<span style='font-size: 10px'>Year {point.key}</span><br/>\"\r\n            },\r\n            series: []\r\n        } as ChartOptions;\r\n    }\r\n\r\n    /**\r\n     * Updates chart data\r\n     * \r\n     * @param chartIdx \r\n     * @param chartData \r\n     */\r\n    protected updateChartData(chartIdx: number, chartData: number[]) {\r\n        if (this.chart && this.chart.series && chartIdx < this.chart.series.length) {\r\n          this.chart.series[chartIdx].setData(chartData);\r\n        }\r\n    }\r\n\r\n    public abstract updateCharts(data: LoanData);\r\n  }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/common/generic-curve-component.ts","module.exports = \"<chart [options]=\\\"options\\\" (load)=\\\"saveChartInstance($event.context)\\\"></chart>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/common/generic-curve.component.html\n// module id = ../../../../../src/app/common/generic-curve.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/costs-curve-cumulative/costs-curve-cumulative.component.css\n// module id = ../../../../../src/app/costs-curve-cumulative/costs-curve-cumulative.component.css\n// module chunks = main","import { Component, OnInit, OnChanges, Input, SimpleChanges } from \"@angular/core\";\nimport { Chart, ChartObject, ChartOptions } from \"highcharts\";\nimport { GenericCurveComponent } from \"../common/generic-curve-component\";\nimport { LoanData } from \"../model/loan-data\";\n\n@Component({\n  selector: \"app-costs-curve-cumulative\",\n  templateUrl: \"../common/generic-curve.component.html\",\n  styleUrls: [\"./costs-curve-cumulative.component.css\"]\n})\nexport class CostsCurveCumulativeComponent extends GenericCurveComponent implements OnInit {\n\n  @Input() public initialCumulativeTotal: number[];\n  @Input() public initialCumulativeInterest: number[];\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Angular component init hook. Initializes graph with initial values.\n   */\n  public ngOnInit() {\n    this.initGraphOptions(this.initialCumulativeTotal, this.initialCumulativeInterest);\n  }\n\n  /**\n   * Initialize Highcarts chart options.\n   * \n   * @param initialInterestRates \n   * @param loanAmount \n   * @param margin \n   */\n  private initGraphOptions(cumulativeTotal: number[], cumulativeInterest: number[]) {\n    this.options = this.generateGraphOptions(\"Cumulative costs over time\", \"Year\", \"Costs (€)\", true);\n    this.options[\"series\"].push({\n      name: \"Cumulative interest (€)\",\n      data: cumulativeInterest,\n    });\n    this.options[\"series\"].push({\n      name: \"Cumulative total cost (€)\",\n      data: cumulativeTotal,\n    });\n  }\n\n  /**\n   * Updates all chart data of this component\n   */\n  public updateCharts(data: LoanData) {\n    this.updateChartData(0, data.getCumulativeInterest());\n    this.updateChartData(1, data.getCumulativeTotal());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/costs-curve-cumulative/costs-curve-cumulative.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/costs-curve-monthly/costs-curve-monthly.component.css\n// module id = ../../../../../src/app/costs-curve-monthly/costs-curve-monthly.component.css\n// module chunks = main","import { Component, OnInit, OnChanges, Input, SimpleChanges } from \"@angular/core\";\nimport { Chart, ChartObject, ChartOptions } from \"highcharts\";\nimport { GenericCurveComponent } from \"../common/generic-curve-component\";\nimport { LoanData } from \"../model/loan-data\";\n\n@Component({\n  selector: \"app-costs-curve-monthly\",\n  templateUrl: \"../common/generic-curve.component.html\",\n  styleUrls: [\"./costs-curve-monthly.component.css\"]\n})\nexport class CostsCurveMonthlyComponent extends GenericCurveComponent implements OnInit {\n\n  @Input() public initialMonthlyPayment: number[];\n  @Input() public initialMonthlyInterest: number[];\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Angular component init hook. Initializes graph with initial values.\n   */\n  public ngOnInit() {\n    this.initGraphOptions(this.initialMonthlyPayment, this.initialMonthlyInterest);\n  }\n\n  /**\n   * Initialize Highcarts chart options.\n   * \n   * @param initialInterestRates \n   * @param loanAmount \n   * @param margin \n   */\n  private initGraphOptions(monthlyPayment: number[], monthlyInterest: number[]) {\n    this.options = this.generateGraphOptions(\"Monthly costs\", \"Year\", \"Costs (€)\", true);\n    this.options[\"series\"].push({\n      name: \"Interest (€)\",\n      data: monthlyInterest,\n      type: \"column\"\n    });\n    this.options[\"series\"].push({\n      name: \"Payment (€)\",\n      data: monthlyPayment,\n      type: \"column\"\n    });\n    this.options[\"plotOptions\"] = {\n      column: {\n        stacking: \"normal\"\n      }\n    };\n  }\n\n  /**\n   * Updates all chart data of this component\n   */\n  public updateCharts(data: LoanData) {\n    this.updateChartData(0, data.getMonthlyInterest());\n    this.updateChartData(1, data.getMonthlyPayment());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/costs-curve-monthly/costs-curve-monthly.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/interest-curve/interest-curve.component.css\n// module id = ../../../../../src/app/interest-curve/interest-curve.component.css\n// module chunks = main","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, SimpleChanges } from \"@angular/core\";\r\nimport { Chart, ChartObject, ChartOptions } from \"highcharts\";\r\nimport { InterestValueInterface } from \"../common/interest-value-interface\";\r\nimport { GenericCurveComponent } from \"../common/generic-curve-component\";\r\nimport { LoanData } from \"../model/loan-data\";\r\n\r\n@Component({\r\n  selector: \"app-interest-curve\",\r\n  templateUrl: \"../common/generic-curve.component.html\",\r\n  styleUrls: [\"./interest-curve.component.css\"]\r\n})\r\nexport class InterestCurveComponent extends GenericCurveComponent implements OnInit {\r\n  @Input() public initialInterestRates: number[];\r\n  @Output() public valueChanged = new EventEmitter<InterestValueInterface>();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Angular component init hook. Initializes graph with default values.\r\n   */\r\n  public ngOnInit() {\r\n    this.initGraphOptions(this.initialInterestRates);\r\n  }\r\n\r\n  /**\r\n   * Highcharts draggable points drop event calls this.\r\n   *\r\n   * @param idx \r\n   * @param value \r\n   */\r\n  private changeInterestRate(idx: number, value: number) {\r\n    this.valueChanged.emit({idx: idx, value: value});\r\n  }\r\n\r\n  /**\r\n   * Initialize Highcarts chart options.\r\n   *\r\n   * @param initialInterestRates \r\n   */\r\n  private initGraphOptions(initialInterestRates: number[]) {\r\n    this.options = this.generateGraphOptions(\"Yearly interest rate<br>(drag & drop to fine-tune)\", \"Year\", \"Interest rate (%)\", false);\r\n    this.options[\"series\"].push({\r\n      name: \"Interest rate (%)\",\r\n      data: initialInterestRates,\r\n      draggableY: true,\r\n      dragMinY: 0\r\n    });\r\n\r\n    let that = this; // reference to InterestCurveComponent object for inner function\r\n    this.options[\"plotOptions\"] = {\r\n      series: {\r\n        point: {\r\n          events: {\r\n            drop: function () {\r\n              that.changeInterestRate(this.category, this.y);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Updates all chart data of this component\r\n   */\r\n  public updateCharts(data: LoanData) {\r\n    this.updateChartData(0, data.getYearlyInterestRates());\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/interest-curve/interest-curve.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/loan-data-form/loan-data-form.component.css\n// module id = ../../../../../src/app/loan-data-form/loan-data-form.component.css\n// module chunks = main","module.exports = \"<form [formGroup]=\\\"loanDataForm\\\" (submit)=\\\"onFormSubmit()\\\">\\n  <div *ngIf=\\\"showValidationError && hasErrors()\\\" class=\\\"alert alert-warning\\\">\\n    Check input values\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12 form-group\\\" [ngClass]=\\\"{ 'has-error': hasError('loanAmount') }\\\">\\n      <label for=\\\"loanAmount\\\">Loan amount (&euro;)</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"loanAmount\\\" placeholder=\\\"Enter amount\\\" formControlName=\\\"loanAmount\\\">\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12 form-group\\\" [ngClass]=\\\"{ 'has-error': hasError('loanYears') }\\\">\\n      <label for=\\\"loanYears\\\">Loan duration (years)</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"loanYears\\\" placeholder=\\\"Enter years\\\" formControlName=\\\"loanYears\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12 form-group\\\" [ngClass]=\\\"{ 'has-error': hasError('interestStart') }\\\">\\n      <label for=\\\"interestStart\\\">Interest rate at the beginning (%)</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"interestStart\\\" placeholder=\\\"Enter amount\\\" formControlName=\\\"interestStart\\\">\\n    </div>\\n    <div class=\\\"col-md-6 col-sm-12 form-group\\\" [ngClass]=\\\"{ 'has-error': hasError('interestEnd') }\\\">\\n      <label for=\\\"interestEnd\\\">Interest rate at the end (%)</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"interestEnd\\\" placeholder=\\\"Enter years\\\" formControlName=\\\"interestEnd\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12 form-group\\\" [ngClass]=\\\"{ 'has-error': hasError('margin') }\\\">\\n      <label for=\\\"margin\\\">Margin rate (%)</label>\\n      <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"margin\\\" placeholder=\\\"Enter amount\\\" formControlName=\\\"margin\\\">\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 col-sm-12\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [ngClass]=\\\"{ disabled: !loanDataForm.valid }\\\">Select</button>\\n    </div>\\n  </div>\\n</form>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/loan-data-form/loan-data-form.component.html\n// module id = ../../../../../src/app/loan-data-form/loan-data-form.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { Subject } from \"rxjs/Subject\";\nimport { LoanData } from \"../model/loan-data\";\nimport { LoanFormDataInterface } from \"../common/loan-form-data-interface\";\nimport \"rxjs/add/operator/takeUntil\";\nimport \"rxjs/add/operator/debounceTime\";\n\n@Component({\n  selector: \"app-loan-data-form\",\n  templateUrl: \"./loan-data-form.component.html\",\n  styleUrls: [\"./loan-data-form.component.css\"]\n})\nexport class LoanDataFormComponent implements OnInit, OnDestroy {\n\n  @Input() public initialValues: LoanFormDataInterface;\n  @Output() public onSubmit = new EventEmitter<LoanFormDataInterface>();\n\n  private loanDataForm = new FormGroup({\n    loanAmount : new FormControl(200000, [Validators.required, Validators.min(0)]),\n    loanYears : new FormControl(15, [Validators.required, Validators.min(1)]),\n    interestStart : new FormControl(1, [Validators.required, Validators.min(0)]),\n    interestEnd : new FormControl(5, [Validators.required, Validators.min(0)]),\n    margin : new FormControl(1, [Validators.required, Validators.min(0)]),\n  });\n\n  private showValidationError: boolean;\n  private ngUnsubscribe: Subject<any> = new Subject();\n\n  constructor() { }\n\n  /**\n   * Angular component init hook. Sets initial values, if given.\n   */\n  public ngOnInit() {\n    if (this.initialValues) {\n      this.loanDataForm.patchValue(this.initialValues);\n    }\n\n    // delay showing validation error message until user stops typing:\n    this.loanDataForm.valueChanges.takeUntil(this.ngUnsubscribe).debounceTime(500).subscribe(\n      () => this.showValidationError = !this.loanDataForm.valid\n    );\n  }\n\n  /**\n   * Angular component destroy hook. Terminates value changed listener Observables.\n   */\n  public ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  /**\n   * When form is submitted, and it's valid emit event to parent component.\n   */\n  private onFormSubmit() {\n    if (this.loanDataForm.valid) {\n      this.onSubmit.emit(this.loanDataForm.value as LoanFormDataInterface);\n    }\n  }\n\n  /**\n   * Returns true if given form component has validation errors.\n   *\n   * @param formControlName\n   */\n  private hasError(formControlName: string) {\n    return !this.loanDataForm.get(formControlName).valid;\n  }\n\n  /**\n   * Returns true if the entire form is invalid\n   */\n  private hasErrors() {\n    return !this.loanDataForm.valid;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/loan-data-form/loan-data-form.component.ts","import { LoanFormDataInterface } from \"../common/loan-form-data-interface\";\r\n\r\nexport class LoanData {\r\n    private formData: LoanFormDataInterface;\r\n    private yearlyInterestRates: number[];\r\n    private monthlyPayment: number[];\r\n    private monthlyInterest: number[];\r\n    private cumulativeTotal: number[];\r\n    private cumulativeInterest: number[];\r\n\r\n    /**\r\n     * Returns formData.\r\n     */\r\n    public getFormData() {\r\n        return this.formData;\r\n    }\r\n\r\n    /**\r\n     * Sets loan basic information, and calculates initial interest rates\r\n     * based on the input.\r\n     *\r\n     * @param data\r\n     */\r\n    public setFormData(data: LoanFormDataInterface) {\r\n        this.yearlyInterestRates = this.computeInitialInterestRates(data.interestStart, data.interestEnd, data.loanYears);\r\n        this.formData = data;\r\n        this.updateCostData();\r\n    }\r\n\r\n    /**\r\n     * Is data needed by the graph initialized?\r\n     */\r\n    public graphsInitialized() {\r\n        return this.formData !== undefined;\r\n    }\r\n\r\n    /**\r\n     * Return interest rates.\r\n     */\r\n    public getYearlyInterestRates() {\r\n        return this.yearlyInterestRates;\r\n    }\r\n\r\n    /**\r\n     * Return total payment €/month at the start of each year.\r\n     */\r\n    public getMonthlyPayment() {\r\n        return this.monthlyPayment;\r\n    }\r\n\r\n    /**\r\n     * Return interest part of €/month payment as the start of each year.\r\n     */\r\n    public getMonthlyInterest() {\r\n        return this.monthlyInterest;\r\n    }\r\n\r\n    /**\r\n     * Returns cumulative total payments at the start of each year.\r\n     */\r\n    public getCumulativeTotal() {\r\n        return this.cumulativeTotal;\r\n    }\r\n\r\n    /**\r\n     * Returns cumulaitve total interest payment at the start of each year.\r\n     */\r\n    public getCumulativeInterest() {\r\n        return this.cumulativeInterest;\r\n    }\r\n\r\n    /**\r\n     * Total cumulative costs at the end of loan period\r\n     */\r\n    public getTotalCosts() {\r\n        let cumulArray = this.getCumulativeTotal();\r\n        return cumulArray && cumulArray.length > 0 ? Math.round(cumulArray[cumulArray.length - 1]) : \"\";\r\n    }\r\n\r\n    /**\r\n     * Total cumulative interest at the end of loan period\r\n     */\r\n    public getTotalInterest() {\r\n        let cumulArray = this.getCumulativeInterest();\r\n        return cumulArray && cumulArray.length > 0 ? Math.round(cumulArray[cumulArray.length - 1]) : \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets interest rate for year idx.\r\n     * \r\n     * @param idx \r\n     * @param value \r\n     */\r\n    public setYearlyInterestRate(idx: number, value: number) {\r\n        if (idx >= 0 && idx < this.yearlyInterestRates.length) {\r\n            let clone = this.yearlyInterestRates.slice();\r\n            clone[idx] = value;\r\n            this.yearlyInterestRates = clone;\r\n            this.updateCostData();\r\n        } else {\r\n            throw Error(\"invalid idx\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates a linearily increasing interest curve.\r\n     * \r\n     * @param interestStart \r\n     * @param interestEnd \r\n     * @param loanYears \r\n     */\r\n    private computeInitialInterestRates(interestStart: number, interestEnd: number, loanYears: number) {\r\n        let rates: number[] = [];\r\n        const step = (interestEnd - interestStart) / loanYears;\r\n        for (let i = 0; i <= loanYears; i++) {\r\n            rates.push(interestStart + i * step);\r\n        }\r\n        return rates;\r\n    }\r\n\r\n    /**\r\n     * Calculates all cost data based on loan size, margin and interest rates.\r\n     * Updates model values.\r\n     */\r\n    private updateCostData() {\r\n        let monthlyPayment: number[] = [];\r\n        let monthlyInterest: number[] = [];\r\n        let cumulativeTotal: number[] = [];\r\n        let cumulativeInterest: number[] = [];\r\n\r\n        let loanRemaining = this.formData.loanAmount;\r\n        let loanMonths = this.formData.loanYears * 12;\r\n        let monthlyLoanPayment = this.formData.loanAmount / loanMonths;\r\n        let cumulTotalEur = 0;\r\n        let cumulTotalInterestEur = 0;\r\n\r\n        // first pass: calculate interests in the beginning of each year\r\n        for (let i = 0; i <= this.formData.loanYears; i++) {\r\n            let interestPct = this.formData.margin + this.yearlyInterestRates[i];\r\n            let interestEur = loanRemaining * interestPct / 100.0 / 12.0;\r\n            let paymentEur = i < this.formData.loanYears ? monthlyLoanPayment : 0; // loan already paid at the beginning of last year\r\n\r\n            monthlyInterest.push(interestEur);\r\n            monthlyPayment.push(paymentEur);\r\n\r\n            loanRemaining -= monthlyLoanPayment * 12;\r\n        }\r\n\r\n        // second pass: calculate total yearly payments using the averages of\r\n        // current year and next year start payments\r\n        cumulativeInterest.push(cumulTotalInterestEur);\r\n        cumulativeTotal.push(cumulTotalEur);\r\n        for (let i = 1; i <= this.formData.loanYears; i++) {\r\n            let yearlyInterestEur = (monthlyInterest[i] + monthlyInterest[i - 1]) / 2 * 12;\r\n            cumulTotalInterestEur += yearlyInterestEur;\r\n            cumulTotalEur += yearlyInterestEur + monthlyLoanPayment * 12;\r\n            cumulativeInterest.push(cumulTotalInterestEur);\r\n            cumulativeTotal.push(cumulTotalEur);\r\n        }\r\n\r\n        this.monthlyPayment = monthlyPayment;\r\n        this.monthlyInterest = monthlyInterest;\r\n        this.cumulativeTotal = cumulativeTotal;\r\n        this.cumulativeInterest = cumulativeInterest;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/app/model/loan-data.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/hannes/ohjelmointi/git/loan-calculator/src/main.ts"],"sourceRoot":"webpack:///"}